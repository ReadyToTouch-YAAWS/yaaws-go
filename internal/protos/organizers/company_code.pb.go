// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v3.21.12
// source: protos/organizers/company_code.proto

package organizers

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CompanyCode int32

const (
	CompanyCode_unknown           CompanyCode = 0
	CompanyCode_readytotouch      CompanyCode = 1
	CompanyCode_google            CompanyCode = 2
	CompanyCode_victoriametrics   CompanyCode = 3
	CompanyCode_dochq             CompanyCode = 4
	CompanyCode_cloudflare        CompanyCode = 5
	CompanyCode_bitly             CompanyCode = 6
	CompanyCode_docker            CompanyCode = 7
	CompanyCode_hashicorp         CompanyCode = 8
	CompanyCode_doordash          CompanyCode = 9
	CompanyCode_mastercard        CompanyCode = 10
	CompanyCode_canonical         CompanyCode = 11
	CompanyCode_pinterest         CompanyCode = 12
	CompanyCode_scylladb          CompanyCode = 13
	CompanyCode_ibm               CompanyCode = 14
	CompanyCode_microsoft         CompanyCode = 15
	CompanyCode_siemens           CompanyCode = 16
	CompanyCode_github            CompanyCode = 17
	CompanyCode_grammarly         CompanyCode = 18
	CompanyCode_digitalocean      CompanyCode = 19
	CompanyCode_godaddy           CompanyCode = 20
	CompanyCode_netlify           CompanyCode = 21
	CompanyCode_soundcloud        CompanyCode = 22
	CompanyCode_crowdstrike       CompanyCode = 23
	CompanyCode_percona           CompanyCode = 24
	CompanyCode_linkedin          CompanyCode = 25
	CompanyCode_careem            CompanyCode = 26
	CompanyCode_dailymotion       CompanyCode = 27
	CompanyCode_getstream         CompanyCode = 28
	CompanyCode_workato           CompanyCode = 29
	CompanyCode_ferretdb          CompanyCode = 30
	CompanyCode_splunk            CompanyCode = 31
	CompanyCode_hellofresh        CompanyCode = 32
	CompanyCode_autodoc           CompanyCode = 33
	CompanyCode_yassir            CompanyCode = 34
	CompanyCode_vodeno            CompanyCode = 35
	CompanyCode_codenotary        CompanyCode = 36
	CompanyCode_audigent          CompanyCode = 37
	CompanyCode_runzero           CompanyCode = 38
	CompanyCode_tyk               CompanyCode = 39
	CompanyCode_sixt              CompanyCode = 40
	CompanyCode_theopentag        CompanyCode = 41
	CompanyCode_oxla              CompanyCode = 42
	CompanyCode_squarespace       CompanyCode = 43
	CompanyCode_woolsocks         CompanyCode = 44
	CompanyCode_autodesk          CompanyCode = 45
	CompanyCode_vonage            CompanyCode = 46
	CompanyCode_konghq            CompanyCode = 47
	CompanyCode_isovalent         CompanyCode = 48
	CompanyCode_acronis           CompanyCode = 49
	CompanyCode_gelato            CompanyCode = 50
	CompanyCode_sumup             CompanyCode = 51
	CompanyCode_nordsecurity      CompanyCode = 52
	CompanyCode_sonicwall         CompanyCode = 53
	CompanyCode_pindrop           CompanyCode = 54
	CompanyCode_seedtag           CompanyCode = 55
	CompanyCode_flixbus           CompanyCode = 56
	CompanyCode_atmail            CompanyCode = 57
	CompanyCode_cimri             CompanyCode = 58
	CompanyCode_fincompare        CompanyCode = 59
	CompanyCode_apifonica         CompanyCode = 60
	CompanyCode_cybus             CompanyCode = 61
	CompanyCode_goflink           CompanyCode = 62
	CompanyCode_snyk              CompanyCode = 63
	CompanyCode_sinch             CompanyCode = 64
	CompanyCode_proofpoint        CompanyCode = 65
	CompanyCode_smithrx           CompanyCode = 66
	CompanyCode_openprovider      CompanyCode = 67
	CompanyCode_fiskaly           CompanyCode = 68
	CompanyCode_fortinet          CompanyCode = 69
	CompanyCode_stonebranch       CompanyCode = 70
	CompanyCode_lantronix         CompanyCode = 71
	CompanyCode_citi              CompanyCode = 72
	CompanyCode_recurly           CompanyCode = 73
	CompanyCode_sytac             CompanyCode = 74
	CompanyCode_cognizant         CompanyCode = 75
	CompanyCode_kroger            CompanyCode = 76
	CompanyCode_ascendion         CompanyCode = 77
	CompanyCode_checkout          CompanyCode = 78
	CompanyCode_cmrad             CompanyCode = 79
	CompanyCode_getcruise         CompanyCode = 80
	CompanyCode_sentinelone       CompanyCode = 81
	CompanyCode_motorolasolutions CompanyCode = 82
)

// Enum value maps for CompanyCode.
var (
	CompanyCode_name = map[int32]string{
		0:  "unknown",
		1:  "readytotouch",
		2:  "google",
		3:  "victoriametrics",
		4:  "dochq",
		5:  "cloudflare",
		6:  "bitly",
		7:  "docker",
		8:  "hashicorp",
		9:  "doordash",
		10: "mastercard",
		11: "canonical",
		12: "pinterest",
		13: "scylladb",
		14: "ibm",
		15: "microsoft",
		16: "siemens",
		17: "github",
		18: "grammarly",
		19: "digitalocean",
		20: "godaddy",
		21: "netlify",
		22: "soundcloud",
		23: "crowdstrike",
		24: "percona",
		25: "linkedin",
		26: "careem",
		27: "dailymotion",
		28: "getstream",
		29: "workato",
		30: "ferretdb",
		31: "splunk",
		32: "hellofresh",
		33: "autodoc",
		34: "yassir",
		35: "vodeno",
		36: "codenotary",
		37: "audigent",
		38: "runzero",
		39: "tyk",
		40: "sixt",
		41: "theopentag",
		42: "oxla",
		43: "squarespace",
		44: "woolsocks",
		45: "autodesk",
		46: "vonage",
		47: "konghq",
		48: "isovalent",
		49: "acronis",
		50: "gelato",
		51: "sumup",
		52: "nordsecurity",
		53: "sonicwall",
		54: "pindrop",
		55: "seedtag",
		56: "flixbus",
		57: "atmail",
		58: "cimri",
		59: "fincompare",
		60: "apifonica",
		61: "cybus",
		62: "goflink",
		63: "snyk",
		64: "sinch",
		65: "proofpoint",
		66: "smithrx",
		67: "openprovider",
		68: "fiskaly",
		69: "fortinet",
		70: "stonebranch",
		71: "lantronix",
		72: "citi",
		73: "recurly",
		74: "sytac",
		75: "cognizant",
		76: "kroger",
		77: "ascendion",
		78: "checkout",
		79: "cmrad",
		80: "getcruise",
		81: "sentinelone",
		82: "motorolasolutions",
	}
	CompanyCode_value = map[string]int32{
		"unknown":           0,
		"readytotouch":      1,
		"google":            2,
		"victoriametrics":   3,
		"dochq":             4,
		"cloudflare":        5,
		"bitly":             6,
		"docker":            7,
		"hashicorp":         8,
		"doordash":          9,
		"mastercard":        10,
		"canonical":         11,
		"pinterest":         12,
		"scylladb":          13,
		"ibm":               14,
		"microsoft":         15,
		"siemens":           16,
		"github":            17,
		"grammarly":         18,
		"digitalocean":      19,
		"godaddy":           20,
		"netlify":           21,
		"soundcloud":        22,
		"crowdstrike":       23,
		"percona":           24,
		"linkedin":          25,
		"careem":            26,
		"dailymotion":       27,
		"getstream":         28,
		"workato":           29,
		"ferretdb":          30,
		"splunk":            31,
		"hellofresh":        32,
		"autodoc":           33,
		"yassir":            34,
		"vodeno":            35,
		"codenotary":        36,
		"audigent":          37,
		"runzero":           38,
		"tyk":               39,
		"sixt":              40,
		"theopentag":        41,
		"oxla":              42,
		"squarespace":       43,
		"woolsocks":         44,
		"autodesk":          45,
		"vonage":            46,
		"konghq":            47,
		"isovalent":         48,
		"acronis":           49,
		"gelato":            50,
		"sumup":             51,
		"nordsecurity":      52,
		"sonicwall":         53,
		"pindrop":           54,
		"seedtag":           55,
		"flixbus":           56,
		"atmail":            57,
		"cimri":             58,
		"fincompare":        59,
		"apifonica":         60,
		"cybus":             61,
		"goflink":           62,
		"snyk":              63,
		"sinch":             64,
		"proofpoint":        65,
		"smithrx":           66,
		"openprovider":      67,
		"fiskaly":           68,
		"fortinet":          69,
		"stonebranch":       70,
		"lantronix":         71,
		"citi":              72,
		"recurly":           73,
		"sytac":             74,
		"cognizant":         75,
		"kroger":            76,
		"ascendion":         77,
		"checkout":          78,
		"cmrad":             79,
		"getcruise":         80,
		"sentinelone":       81,
		"motorolasolutions": 82,
	}
)

func (x CompanyCode) Enum() *CompanyCode {
	p := new(CompanyCode)
	*p = x
	return p
}

func (x CompanyCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CompanyCode) Descriptor() protoreflect.EnumDescriptor {
	return file_protos_organizers_company_code_proto_enumTypes[0].Descriptor()
}

func (CompanyCode) Type() protoreflect.EnumType {
	return &file_protos_organizers_company_code_proto_enumTypes[0]
}

func (x CompanyCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CompanyCode.Descriptor instead.
func (CompanyCode) EnumDescriptor() ([]byte, []int) {
	return file_protos_organizers_company_code_proto_rawDescGZIP(), []int{0}
}

var File_protos_organizers_company_code_proto protoreflect.FileDescriptor

var file_protos_organizers_company_code_proto_rawDesc = []byte{
	0x0a, 0x24, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a,
	0x65, 0x72, 0x73, 0x2f, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x5f, 0x63, 0x6f, 0x64, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x04, 0x61, 0x75, 0x74, 0x68, 0x2a, 0x8a, 0x09, 0x0a,
	0x0b, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x0b, 0x0a, 0x07,
	0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x10, 0x00, 0x12, 0x10, 0x0a, 0x0c, 0x72, 0x65, 0x61,
	0x64, 0x79, 0x74, 0x6f, 0x74, 0x6f, 0x75, 0x63, 0x68, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x10, 0x02, 0x12, 0x13, 0x0a, 0x0f, 0x76, 0x69, 0x63, 0x74, 0x6f,
	0x72, 0x69, 0x61, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x10, 0x03, 0x12, 0x09, 0x0a, 0x05,
	0x64, 0x6f, 0x63, 0x68, 0x71, 0x10, 0x04, 0x12, 0x0e, 0x0a, 0x0a, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x66, 0x6c, 0x61, 0x72, 0x65, 0x10, 0x05, 0x12, 0x09, 0x0a, 0x05, 0x62, 0x69, 0x74, 0x6c, 0x79,
	0x10, 0x06, 0x12, 0x0a, 0x0a, 0x06, 0x64, 0x6f, 0x63, 0x6b, 0x65, 0x72, 0x10, 0x07, 0x12, 0x0d,
	0x0a, 0x09, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x10, 0x08, 0x12, 0x0c, 0x0a,
	0x08, 0x64, 0x6f, 0x6f, 0x72, 0x64, 0x61, 0x73, 0x68, 0x10, 0x09, 0x12, 0x0e, 0x0a, 0x0a, 0x6d,
	0x61, 0x73, 0x74, 0x65, 0x72, 0x63, 0x61, 0x72, 0x64, 0x10, 0x0a, 0x12, 0x0d, 0x0a, 0x09, 0x63,
	0x61, 0x6e, 0x6f, 0x6e, 0x69, 0x63, 0x61, 0x6c, 0x10, 0x0b, 0x12, 0x0d, 0x0a, 0x09, 0x70, 0x69,
	0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x10, 0x0c, 0x12, 0x0c, 0x0a, 0x08, 0x73, 0x63, 0x79,
	0x6c, 0x6c, 0x61, 0x64, 0x62, 0x10, 0x0d, 0x12, 0x07, 0x0a, 0x03, 0x69, 0x62, 0x6d, 0x10, 0x0e,
	0x12, 0x0d, 0x0a, 0x09, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x73, 0x6f, 0x66, 0x74, 0x10, 0x0f, 0x12,
	0x0b, 0x0a, 0x07, 0x73, 0x69, 0x65, 0x6d, 0x65, 0x6e, 0x73, 0x10, 0x10, 0x12, 0x0a, 0x0a, 0x06,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x10, 0x11, 0x12, 0x0d, 0x0a, 0x09, 0x67, 0x72, 0x61, 0x6d,
	0x6d, 0x61, 0x72, 0x6c, 0x79, 0x10, 0x12, 0x12, 0x10, 0x0a, 0x0c, 0x64, 0x69, 0x67, 0x69, 0x74,
	0x61, 0x6c, 0x6f, 0x63, 0x65, 0x61, 0x6e, 0x10, 0x13, 0x12, 0x0b, 0x0a, 0x07, 0x67, 0x6f, 0x64,
	0x61, 0x64, 0x64, 0x79, 0x10, 0x14, 0x12, 0x0b, 0x0a, 0x07, 0x6e, 0x65, 0x74, 0x6c, 0x69, 0x66,
	0x79, 0x10, 0x15, 0x12, 0x0e, 0x0a, 0x0a, 0x73, 0x6f, 0x75, 0x6e, 0x64, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x10, 0x16, 0x12, 0x0f, 0x0a, 0x0b, 0x63, 0x72, 0x6f, 0x77, 0x64, 0x73, 0x74, 0x72, 0x69,
	0x6b, 0x65, 0x10, 0x17, 0x12, 0x0b, 0x0a, 0x07, 0x70, 0x65, 0x72, 0x63, 0x6f, 0x6e, 0x61, 0x10,
	0x18, 0x12, 0x0c, 0x0a, 0x08, 0x6c, 0x69, 0x6e, 0x6b, 0x65, 0x64, 0x69, 0x6e, 0x10, 0x19, 0x12,
	0x0a, 0x0a, 0x06, 0x63, 0x61, 0x72, 0x65, 0x65, 0x6d, 0x10, 0x1a, 0x12, 0x0f, 0x0a, 0x0b, 0x64,
	0x61, 0x69, 0x6c, 0x79, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x10, 0x1b, 0x12, 0x0d, 0x0a, 0x09,
	0x67, 0x65, 0x74, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x10, 0x1c, 0x12, 0x0b, 0x0a, 0x07, 0x77,
	0x6f, 0x72, 0x6b, 0x61, 0x74, 0x6f, 0x10, 0x1d, 0x12, 0x0c, 0x0a, 0x08, 0x66, 0x65, 0x72, 0x72,
	0x65, 0x74, 0x64, 0x62, 0x10, 0x1e, 0x12, 0x0a, 0x0a, 0x06, 0x73, 0x70, 0x6c, 0x75, 0x6e, 0x6b,
	0x10, 0x1f, 0x12, 0x0e, 0x0a, 0x0a, 0x68, 0x65, 0x6c, 0x6c, 0x6f, 0x66, 0x72, 0x65, 0x73, 0x68,
	0x10, 0x20, 0x12, 0x0b, 0x0a, 0x07, 0x61, 0x75, 0x74, 0x6f, 0x64, 0x6f, 0x63, 0x10, 0x21, 0x12,
	0x0a, 0x0a, 0x06, 0x79, 0x61, 0x73, 0x73, 0x69, 0x72, 0x10, 0x22, 0x12, 0x0a, 0x0a, 0x06, 0x76,
	0x6f, 0x64, 0x65, 0x6e, 0x6f, 0x10, 0x23, 0x12, 0x0e, 0x0a, 0x0a, 0x63, 0x6f, 0x64, 0x65, 0x6e,
	0x6f, 0x74, 0x61, 0x72, 0x79, 0x10, 0x24, 0x12, 0x0c, 0x0a, 0x08, 0x61, 0x75, 0x64, 0x69, 0x67,
	0x65, 0x6e, 0x74, 0x10, 0x25, 0x12, 0x0b, 0x0a, 0x07, 0x72, 0x75, 0x6e, 0x7a, 0x65, 0x72, 0x6f,
	0x10, 0x26, 0x12, 0x07, 0x0a, 0x03, 0x74, 0x79, 0x6b, 0x10, 0x27, 0x12, 0x08, 0x0a, 0x04, 0x73,
	0x69, 0x78, 0x74, 0x10, 0x28, 0x12, 0x0e, 0x0a, 0x0a, 0x74, 0x68, 0x65, 0x6f, 0x70, 0x65, 0x6e,
	0x74, 0x61, 0x67, 0x10, 0x29, 0x12, 0x08, 0x0a, 0x04, 0x6f, 0x78, 0x6c, 0x61, 0x10, 0x2a, 0x12,
	0x0f, 0x0a, 0x0b, 0x73, 0x71, 0x75, 0x61, 0x72, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x10, 0x2b,
	0x12, 0x0d, 0x0a, 0x09, 0x77, 0x6f, 0x6f, 0x6c, 0x73, 0x6f, 0x63, 0x6b, 0x73, 0x10, 0x2c, 0x12,
	0x0c, 0x0a, 0x08, 0x61, 0x75, 0x74, 0x6f, 0x64, 0x65, 0x73, 0x6b, 0x10, 0x2d, 0x12, 0x0a, 0x0a,
	0x06, 0x76, 0x6f, 0x6e, 0x61, 0x67, 0x65, 0x10, 0x2e, 0x12, 0x0a, 0x0a, 0x06, 0x6b, 0x6f, 0x6e,
	0x67, 0x68, 0x71, 0x10, 0x2f, 0x12, 0x0d, 0x0a, 0x09, 0x69, 0x73, 0x6f, 0x76, 0x61, 0x6c, 0x65,
	0x6e, 0x74, 0x10, 0x30, 0x12, 0x0b, 0x0a, 0x07, 0x61, 0x63, 0x72, 0x6f, 0x6e, 0x69, 0x73, 0x10,
	0x31, 0x12, 0x0a, 0x0a, 0x06, 0x67, 0x65, 0x6c, 0x61, 0x74, 0x6f, 0x10, 0x32, 0x12, 0x09, 0x0a,
	0x05, 0x73, 0x75, 0x6d, 0x75, 0x70, 0x10, 0x33, 0x12, 0x10, 0x0a, 0x0c, 0x6e, 0x6f, 0x72, 0x64,
	0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x10, 0x34, 0x12, 0x0d, 0x0a, 0x09, 0x73, 0x6f,
	0x6e, 0x69, 0x63, 0x77, 0x61, 0x6c, 0x6c, 0x10, 0x35, 0x12, 0x0b, 0x0a, 0x07, 0x70, 0x69, 0x6e,
	0x64, 0x72, 0x6f, 0x70, 0x10, 0x36, 0x12, 0x0b, 0x0a, 0x07, 0x73, 0x65, 0x65, 0x64, 0x74, 0x61,
	0x67, 0x10, 0x37, 0x12, 0x0b, 0x0a, 0x07, 0x66, 0x6c, 0x69, 0x78, 0x62, 0x75, 0x73, 0x10, 0x38,
	0x12, 0x0a, 0x0a, 0x06, 0x61, 0x74, 0x6d, 0x61, 0x69, 0x6c, 0x10, 0x39, 0x12, 0x09, 0x0a, 0x05,
	0x63, 0x69, 0x6d, 0x72, 0x69, 0x10, 0x3a, 0x12, 0x0e, 0x0a, 0x0a, 0x66, 0x69, 0x6e, 0x63, 0x6f,
	0x6d, 0x70, 0x61, 0x72, 0x65, 0x10, 0x3b, 0x12, 0x0d, 0x0a, 0x09, 0x61, 0x70, 0x69, 0x66, 0x6f,
	0x6e, 0x69, 0x63, 0x61, 0x10, 0x3c, 0x12, 0x09, 0x0a, 0x05, 0x63, 0x79, 0x62, 0x75, 0x73, 0x10,
	0x3d, 0x12, 0x0b, 0x0a, 0x07, 0x67, 0x6f, 0x66, 0x6c, 0x69, 0x6e, 0x6b, 0x10, 0x3e, 0x12, 0x08,
	0x0a, 0x04, 0x73, 0x6e, 0x79, 0x6b, 0x10, 0x3f, 0x12, 0x09, 0x0a, 0x05, 0x73, 0x69, 0x6e, 0x63,
	0x68, 0x10, 0x40, 0x12, 0x0e, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6f, 0x66, 0x70, 0x6f, 0x69, 0x6e,
	0x74, 0x10, 0x41, 0x12, 0x0b, 0x0a, 0x07, 0x73, 0x6d, 0x69, 0x74, 0x68, 0x72, 0x78, 0x10, 0x42,
	0x12, 0x10, 0x0a, 0x0c, 0x6f, 0x70, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72,
	0x10, 0x43, 0x12, 0x0b, 0x0a, 0x07, 0x66, 0x69, 0x73, 0x6b, 0x61, 0x6c, 0x79, 0x10, 0x44, 0x12,
	0x0c, 0x0a, 0x08, 0x66, 0x6f, 0x72, 0x74, 0x69, 0x6e, 0x65, 0x74, 0x10, 0x45, 0x12, 0x0f, 0x0a,
	0x0b, 0x73, 0x74, 0x6f, 0x6e, 0x65, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x10, 0x46, 0x12, 0x0d,
	0x0a, 0x09, 0x6c, 0x61, 0x6e, 0x74, 0x72, 0x6f, 0x6e, 0x69, 0x78, 0x10, 0x47, 0x12, 0x08, 0x0a,
	0x04, 0x63, 0x69, 0x74, 0x69, 0x10, 0x48, 0x12, 0x0b, 0x0a, 0x07, 0x72, 0x65, 0x63, 0x75, 0x72,
	0x6c, 0x79, 0x10, 0x49, 0x12, 0x09, 0x0a, 0x05, 0x73, 0x79, 0x74, 0x61, 0x63, 0x10, 0x4a, 0x12,
	0x0d, 0x0a, 0x09, 0x63, 0x6f, 0x67, 0x6e, 0x69, 0x7a, 0x61, 0x6e, 0x74, 0x10, 0x4b, 0x12, 0x0a,
	0x0a, 0x06, 0x6b, 0x72, 0x6f, 0x67, 0x65, 0x72, 0x10, 0x4c, 0x12, 0x0d, 0x0a, 0x09, 0x61, 0x73,
	0x63, 0x65, 0x6e, 0x64, 0x69, 0x6f, 0x6e, 0x10, 0x4d, 0x12, 0x0c, 0x0a, 0x08, 0x63, 0x68, 0x65,
	0x63, 0x6b, 0x6f, 0x75, 0x74, 0x10, 0x4e, 0x12, 0x09, 0x0a, 0x05, 0x63, 0x6d, 0x72, 0x61, 0x64,
	0x10, 0x4f, 0x12, 0x0d, 0x0a, 0x09, 0x67, 0x65, 0x74, 0x63, 0x72, 0x75, 0x69, 0x73, 0x65, 0x10,
	0x50, 0x12, 0x0f, 0x0a, 0x0b, 0x73, 0x65, 0x6e, 0x74, 0x69, 0x6e, 0x65, 0x6c, 0x6f, 0x6e, 0x65,
	0x10, 0x51, 0x12, 0x15, 0x0a, 0x11, 0x6d, 0x6f, 0x74, 0x6f, 0x72, 0x6f, 0x6c, 0x61, 0x73, 0x6f,
	0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x10, 0x52, 0x42, 0x13, 0x5a, 0x11, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x73, 0x2f, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x65, 0x72, 0x73, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_protos_organizers_company_code_proto_rawDescOnce sync.Once
	file_protos_organizers_company_code_proto_rawDescData = file_protos_organizers_company_code_proto_rawDesc
)

func file_protos_organizers_company_code_proto_rawDescGZIP() []byte {
	file_protos_organizers_company_code_proto_rawDescOnce.Do(func() {
		file_protos_organizers_company_code_proto_rawDescData = protoimpl.X.CompressGZIP(file_protos_organizers_company_code_proto_rawDescData)
	})
	return file_protos_organizers_company_code_proto_rawDescData
}

var file_protos_organizers_company_code_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_protos_organizers_company_code_proto_goTypes = []any{
	(CompanyCode)(0), // 0: auth.CompanyCode
}
var file_protos_organizers_company_code_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_protos_organizers_company_code_proto_init() }
func file_protos_organizers_company_code_proto_init() {
	if File_protos_organizers_company_code_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_protos_organizers_company_code_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_protos_organizers_company_code_proto_goTypes,
		DependencyIndexes: file_protos_organizers_company_code_proto_depIdxs,
		EnumInfos:         file_protos_organizers_company_code_proto_enumTypes,
	}.Build()
	File_protos_organizers_company_code_proto = out.File
	file_protos_organizers_company_code_proto_rawDesc = nil
	file_protos_organizers_company_code_proto_goTypes = nil
	file_protos_organizers_company_code_proto_depIdxs = nil
}
