// Code generated by qtc from "company_code.proto.qtpl". DO NOT EDIT.
// See https://github.com/valyala/quicktemplate for details.

package dev

import (
	qtio422016 "io"

	qt422016 "github.com/valyala/quicktemplate"
)

var (
	_ = qtio422016.Copy
	_ = qt422016.AcquireByteBuffer
)

func StreamCompanyCode(qw422016 *qt422016.Writer, data map[int32]string, max int32, companies []Company) {
	qw422016.N().S(`syntax = "proto3";

package auth;

option go_package = "protos/organizers";

`)
	qw422016.N().S(`enum CompanyCode {`)
	qw422016.N().S(`
`)
	for i := int32(0); i <= max; i++ {
		qw422016.N().S(` `)
		qw422016.E().S(data[i])
		qw422016.N().S(` `)
		qw422016.N().S(`=`)
		qw422016.N().S(` `)
		qw422016.N().D(int(i))
		qw422016.N().S(`;`)
		qw422016.N().S(`
`)
	}
	for i, company := range companies {
		qw422016.N().S(` `)
		qw422016.E().S(company.LinkedInProfile.Alias)
		qw422016.N().S(` `)
		qw422016.N().S(`=`)
		qw422016.N().S(` `)
		qw422016.N().D(int(max) + int(i) + 1)
		qw422016.N().S(`;`)
		qw422016.N().S(`
`)
	}
	qw422016.N().S(`}`)
	qw422016.N().S(`
`)
}

func WriteCompanyCode(qq422016 qtio422016.Writer, data map[int32]string, max int32, companies []Company) {
	qw422016 := qt422016.AcquireWriter(qq422016)
	StreamCompanyCode(qw422016, data, max, companies)
	qt422016.ReleaseWriter(qw422016)
}

func CompanyCode(data map[int32]string, max int32, companies []Company) string {
	qb422016 := qt422016.AcquireByteBuffer()
	WriteCompanyCode(qb422016, data, max, companies)
	qs422016 := string(qb422016.B)
	qt422016.ReleaseByteBuffer(qb422016)
	return qs422016
}
